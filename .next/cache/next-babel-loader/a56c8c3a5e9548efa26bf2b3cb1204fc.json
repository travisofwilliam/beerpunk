{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/traviswilliams/Desktop/beerpunk/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\n\nvar axios = require('axios');\n\nvar Index = function Index() {\n  _s();\n\n  // State prop for response from axios GET request\n  var _useState = useState([]),\n      beerRes = _useState[0],\n      setBeerRes = _useState[1]; // State prop for modified beer list according to ABV\n\n\n  var _useState2 = useState([]),\n      beerList = _useState2[0],\n      setBeerList = _useState2[1];\n\n  var getBeers = function getBeers(e) {\n    e.preventDefault(); // GET all beers\n\n    axios.get('https://api.punkapi.com/v2/beers').then(function (res) {\n      // Store all beers in State\n      setBeerRes(res.data);\n      console.log(res.data);\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  };\n\n  var selectedAbv = function selectedAbv(e) {\n    if (e.target.value === 'less than 6') {\n      setBeerList(beerRes.filter(function (beer) {\n        return beer.abv < 6;\n      }));\n    } else if (e.target.value === '6 or more') {\n      setBeerList(beerRes.filter(function (beer) {\n        return beer.abv >= 6;\n      }));\n    } else {\n      setBeerList([beerRes]);\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Beer Punk\"), __jsx(\"button\", {\n    onClick: getBeers,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Get All Beers\"), // If beerRes is populated \n  beerRes.length >= 1 ? __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, __jsx(\"select\", {\n    onChange: selectedAbv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, \"--ABV Range--\"), __jsx(\"option\", {\n    value: \"less than 6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, \"Lower than 6%\"), __jsx(\"option\", {\n    value: \"6 or more\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"6% or higher\")), !beerList.length ? beerRes.map(function (beer, idx) {\n    return __jsx(\"p\", {\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 24\n      }\n    }, beer.abv, \"%\");\n  }) : beerList.map(function (beer, idx) {\n    return __jsx(\"p\", {\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 26\n      }\n    }, beer.abv);\n  })) : '');\n};\n\n_s(Index, \"q9328UZtFWkLo/qgtPf/eqaURz4=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/traviswilliams/Desktop/beerpunk/pages/index.js"],"names":["useState","axios","require","Index","beerRes","setBeerRes","beerList","setBeerList","getBeers","e","preventDefault","get","then","res","data","console","log","err","selectedAbv","target","value","filter","beer","abv","length","map","idx"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAElB;AAFkB,kBAGYH,QAAQ,CAAC,EAAD,CAHpB;AAAA,MAGXI,OAHW;AAAA,MAGFC,UAHE,iBAKlB;;;AALkB,mBAMcL,QAAQ,CAAC,EAAD,CANtB;AAAA,MAMXM,QANW;AAAA,MAMDC,WANC;;AAQlB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD,EAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF,GADsB,CAGtB;;AACAT,IAAAA,KAAK,CAACU,GAAN,CAAU,kCAAV,EACGC,IADH,CACQ,UAAAC,GAAG,EAAI;AACX;AACAR,MAAAA,UAAU,CAACQ,GAAG,CAACC,IAAL,CAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAhB;AACD,KALH,WAMS,UAAAG,GAAG;AAAA,aAAIF,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAAJ;AAAA,KANZ;AAOD,GAXD;;AAaA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACT,CAAD,EAAO;AAEzB,QAAIA,CAAC,CAACU,MAAF,CAASC,KAAT,KAAmB,aAAvB,EAAsC;AACpCb,MAAAA,WAAW,CAACH,OAAO,CAACiB,MAAR,CAAe,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,GAAL,GAAW,CAAf;AAAA,OAAnB,CAAD,CAAX;AACD,KAFD,MAEO,IAAId,CAAC,CAACU,MAAF,CAASC,KAAT,KAAmB,WAAvB,EAAoC;AACzCb,MAAAA,WAAW,CAACH,OAAO,CAACiB,MAAR,CAAe,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,GAAL,IAAY,CAAhB;AAAA,OAAnB,CAAD,CAAX;AACD,KAFM,MAEA;AACLhB,MAAAA,WAAW,CAAC,CAACH,OAAD,CAAD,CAAX;AACD;AAEF,GAVD;;AAYA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAQ,IAAA,OAAO,EAAEI,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,EAII;AACAJ,EAAAA,OAAO,CAACoB,MAAR,IAAkB,CAAlB,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,QAAQ,EAAEN,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAQ,IAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,EAGE;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CADF,EAOI,CAACZ,QAAQ,CAACkB,MAAV,GAAmBpB,OAAO,CAACqB,GAAR,CAAY,UAACH,IAAD,EAAOI,GAAP,EAAe;AAC5C,WAAO;AAAG,MAAA,GAAG,EAAEA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcJ,IAAI,CAACC,GAAnB,MAAP;AACD,GAFkB,CAAnB,GAGIjB,QAAQ,CAACmB,GAAT,CAAa,UAACH,IAAD,EAAOI,GAAP,EAAe;AAC5B,WAAO;AAAG,MAAA,GAAG,EAAEA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcJ,IAAI,CAACC,GAAnB,CAAP;AACD,GAFC,CAVR,CADF,GAgBI,EArBR,CADF;AA0BD,CA3DD;;GAAMpB,K;;KAAAA,K;AA6DN,eAAeA,KAAf","sourcesContent":["import { useState } from 'react'\nconst axios = require('axios')\n\nconst Index = () => {\n\n  // State prop for response from axios GET request\n  const [beerRes, setBeerRes] = useState([])\n\n  // State prop for modified beer list according to ABV\n  const [beerList, setBeerList] = useState([])\n\n  const getBeers = (e) => {\n    e.preventDefault()\n\n    // GET all beers\n    axios.get('https://api.punkapi.com/v2/beers')\n      .then(res => {\n        // Store all beers in State\n        setBeerRes(res.data)\n        console.log(res.data)\n      })\n      .catch(err => console.log(err))\n  }\n\n  const selectedAbv = (e) => {\n\n    if (e.target.value === 'less than 6') {\n      setBeerList(beerRes.filter(beer => beer.abv < 6))\n    } else if (e.target.value === '6 or more') {\n      setBeerList(beerRes.filter(beer => beer.abv >= 6))\n    } else {\n      setBeerList([beerRes])\n    }\n\n  }\n\n  return (\n    <div>\n      <h4>Beer Punk</h4>\n      <button onClick={getBeers}>Get All Beers</button>\n      {\n        // If beerRes is populated \n        beerRes.length >= 1 ?\n          <div>\n            <select onChange={selectedAbv}>\n              <option value=\"\">--ABV Range--</option>\n              <option value=\"less than 6\">Lower than 6%</option>\n              <option value=\"6 or more\">6% or higher</option>\n            </select>\n            {\n              !beerList.length ? beerRes.map((beer, idx) => {\n                return <p key={idx}>{beer.abv}%</p>\n              })\n                : beerList.map((beer, idx) => {\n                  return <p key={idx}>{beer.abv}</p>\n                })\n            }\n          </div>\n          : ''\n      }\n    </div>\n  )\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}