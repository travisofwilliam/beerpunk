{"ast":null,"code":"var _jsxFileName = \"/Users/traviswilliams/Desktop/beerpunk/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport Head from 'next/head';\n\nconst axios = require('axios');\n\nconst Index = () => {\n  // State prop for response from axios GET request\n  const {\n    0: beerRes,\n    1: setBeerRes\n  } = useState([]); // State prop for modified beer list according to ABV\n\n  const {\n    0: beerList,\n    1: setBeerList\n  } = useState([]);\n\n  const getBeers = e => {\n    e.preventDefault(); // GET all beers\n\n    axios.get('https://api.punkapi.com/v2/beers').then(res => {\n      // Store all beers in State\n      // beerRes persists original API Response\n      setBeerRes(res.data); // beerList will be modified when specific ABV ranges are selected\n\n      setBeerList(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const selectedAbv = e => {\n    if (e.target.value === 'less than 6') {\n      setBeerList(beerRes.filter(beer => beer.abv < 6));\n    } else if (e.target.value === '6 or more') {\n      setBeerList(beerRes.filter(beer => beer.abv >= 6));\n    } else {\n      setBeerList(beerRes);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"container text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://bootswatch.com/4/pulse/bootstrap.min.css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Beer Punk\"), __jsx(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: getBeers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Get All Beers\"), // If beerRes is populated \n  beerRes.length >= 1 ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, __jsx(\"select\", {\n    className: \"btn btn-secondary\",\n    onChange: selectedAbv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \"--ABV Range--\"), __jsx(\"option\", {\n    value: \"less than 6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, \"Lower than 6%\"), __jsx(\"option\", {\n    value: \"6 or more\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"6% or higher\")), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, beerList.map((beer, idx) => {\n    return __jsx(\"div\", {\n      key: idx,\n      className: \"card col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 26\n      }\n    }, __jsx(\"h5\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, beer.name), __jsx(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, __jsx(\"h5\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 23\n      }\n    }, beer.slogan), __jsx(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 23\n      }\n    }, __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 48\n      }\n    }, \"ABV:\"), beer.abv, \"%\")));\n  }))) : '');\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/traviswilliams/Desktop/beerpunk/pages/index.js"],"names":["useState","useEffect","Head","axios","require","Index","beerRes","setBeerRes","beerList","setBeerList","getBeers","e","preventDefault","get","then","res","data","catch","err","console","log","selectedAbv","target","value","filter","beer","abv","length","map","idx","name","slogan"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport Head from 'next/head'\nconst axios = require('axios')\n\nconst Index = () => {\n\n  // State prop for response from axios GET request\n  const [beerRes, setBeerRes] = useState([])\n\n  // State prop for modified beer list according to ABV\n  const [beerList, setBeerList] = useState([])\n\n  const getBeers = (e) => {\n    e.preventDefault()\n\n    // GET all beers\n    axios.get('https://api.punkapi.com/v2/beers')\n      .then(res => {\n        // Store all beers in State\n\n        // beerRes persists original API Response\n        setBeerRes(res.data)\n\n        // beerList will be modified when specific ABV ranges are selected\n        setBeerList(res.data)\n      })\n      .catch(err => console.log(err))\n  }\n\n  const selectedAbv = (e) => {\n\n    if (e.target.value === 'less than 6') {\n      setBeerList(beerRes.filter(beer => beer.abv < 6))\n    } else if (e.target.value === '6 or more') {\n      setBeerList(beerRes.filter(beer => beer.abv >= 6))\n    } else {\n      setBeerList(beerRes)\n    }\n\n  }\n\n  return (\n    <div className='container text-center'>\n      <Head>\n        <link rel=\"stylesheet\" href=\"https://bootswatch.com/4/pulse/bootstrap.min.css\" />\n      </Head>\n      <h4>Beer Punk</h4>\n      <button className='btn btn-primary' onClick={getBeers}>Get All Beers</button>\n      {\n        // If beerRes is populated \n        beerRes.length >= 1 ?\n          <div>\n            <select className='btn btn-secondary' onChange={selectedAbv}>\n              <option value=\"\">--ABV Range--</option>\n              <option value=\"less than 6\">Lower than 6%</option>\n              <option value=\"6 or more\">6% or higher</option>\n            </select>\n\n            <br />\n            <div className='row'>\n              {\n                beerList.map((beer, idx) => {\n                  return <div key={idx} className=\"card col-3\">\n                    <h5 className=\"card-header\">{beer.name}</h5>\n                    <div className=\"card-body\">\n                      <h5 className=\"card-title\">{beer.slogan}</h5>\n                      <p className=\"card-text\"><strong>ABV:</strong>{beer.abv}%</p>\n                    </div>\n                  </div>\n                })\n              }\n            </div>\n          </div>\n          : ''\n      }\n    </div>\n  )\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}